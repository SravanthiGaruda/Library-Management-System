CREATE TABLE EMPLOYEE (
  Fname VARCHAR2(15) NOT NULL,
  Minit VARCHAR2(1),
  Lname VARCHAR2(15) NOT NULL,
  Ssn CHAR(9) NOT NULL,
  Bdate DATE,
  Address VARCHAR2(30),
  Sex CHAR,
  Salary NUMBER(10,2),
  Super_ssn CHAR(9),
  Dno NUMBER(4),
  OverTimeCount NUMBER,
  PRIMARY KEY (SSN),
  FOREIGN KEY (Super_ssn) REFERENCES EMPLOYEE(Ssn)
);

CREATE TABLE DEPARTMENT (
  Dname VARCHAR2(15) NOT NULL,
  Dnumber NUMBER(4) NOT NULL,
  Mgr_ssn CHAR(9) NOT NULL,
  Mgr_start_date DATE,
  PRIMARY KEY (Dnumber),
  FOREIGN KEY (Mgr_ssn) REFERENCES EMPLOYEE(Ssn)
);

CREATE TABLE DEPT_LOCATIONS (
  Dnumber NUMBER(4) NOT NULL,
  Dlocation VARCHAR2(15),
  PRIMARY KEY (Dnumber, Dlocation),
  FOREIGN KEY (Dnumber) REFERENCES DEPARTMENT(Dnumber)
);

CREATE TABLE PROJECT (
  Pname VARCHAR2(15) NOT NULL,
  Pnumber NUMBER(4) NOT NULL,
  Plocation VARCHAR2(15),
  Dnum NUMBER(4) NOT NULL,
  PRIMARY KEY (Pnumber),
  FOREIGN KEY (Dnum) REFERENCES DEPARTMENT(Dnumber)
);

CREATE TABLE WORKS_ON (
  Essn CHAR(9) NOT NULL,
  Pno NUMBER(4) NOT NULL,
  Hours NUMBER(4,1),
  PRIMARY KEY (Essn, Pno),
  FOREIGN KEY (Essn) REFERENCES EMPLOYEE(Ssn),
  FOREIGN KEY (Pno) REFERENCES PROJECT(Pnumber)
);


CREATE TABLE DEPENDENT (
  Essn CHAR(9) NOT NULL,
  Dependent_name VARCHAR2(15),
  Sex CHAR,
  Bdate DATE,
  Relationship VARCHAR2(8),
  PRIMARY KEY (Essn, Dependent_name),
  FOREIGN KEY (Essn) REFERENCES EMPLOYEE(Ssn)
);


ALTER TABLE EMPLOYEE
ADD FOREIGN KEY (Dno) REFERENCES DEPARTMENT(Dnumber);


CREATE OR REPLACE NONEDITIONABLE TRIGGER UpdateOverTimeCount
AFTER INSERT ON WORKS_ON
FOR EACH ROW
BEGIN
  IF :NEW.Hours > 40 THEN
    UPDATE EMPLOYEE
    SET OverTimeCount = OverTimeCount + 1
    WHERE Ssn = :NEW.Essn;
  END IF;
END;
